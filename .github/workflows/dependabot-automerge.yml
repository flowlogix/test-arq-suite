name: "Dependabot Auto Approve and Merge"
on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - TestNG

jobs:
  automerge:
    if: |
      github.actor == 'dependabot[bot]' || github.actor == 'dependabot-preview[bot]'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Approve PR
        uses: hmarr/auto-approve-action@f0939ea97e9205ef24d872e76833fa908a770363 # v4.0.0
        with:
          github-token: ${{ secrets.GH_AUTOMERGE_TOKEN }}

#      - name: Wait for external checks (Jenkins/Snyk)
#        run: sleep 30

      - name: Merge PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GH_AUTOMERGE_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const { owner, repo } = context.repo;
            const ref = pr.head.sha;
            const currentWorkflow = 'automerge';

            let tries = 0, maxTries = 40;
            while (tries < maxTries) {
              const checks = await github.rest.checks.listForRef({ owner, repo, ref });
              const pending = checks.data.check_runs.filter(
                c => c.name !== currentWorkflow && 
                !(c.status === 'completed' && c.conclusion === 'success')
              );
              if (pending.length === 0) break;
              core.info(`Waiting for checks: ${pending.map(c => c.name).join(', ')}`);
              await new Promise(r => setTimeout(r, 15000));
              tries++;
            }
            if (tries === maxTries) {
              core.setFailed('Timeout waiting for running checks');
            } else {
              core.info('All checks are done, merging');
              if (pr.user.login.startsWith('dependabot')) {
                await github.rest.pulls.merge({
                  owner, repo, pull_number: pr.prNumber, merge_method: 'squash',
                });
              }
            }
